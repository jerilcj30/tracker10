// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/affiliatenetworks": {
            "post": {
                "description": "Create an affiliate network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Affiliate Networks"
                ],
                "summary": "Create an affiliate network",
                "parameters": [
                    {
                        "description": "affiliateNetwork data",
                        "name": "affiliateNetwork",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/affiliatenetworks.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "affiliateNetwork created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/affiliatenetworks/affiliatenetworkids": {
            "get": {
                "description": "Get the list of all affiliate network ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Affiliate Networks"
                ],
                "summary": "Get the list of all affiliate network ids",
                "responses": {
                    "200": {
                        "description": "List of affiliate networks ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/affiliatenetworks.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "description": "Get the list of all campaigns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Get the list of all campaigns",
                "parameters": [
                    {
                        "type": "string",
                        "format": "yyyy-MM-dd",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "yyyy-MM-dd",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of campaigns",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/campaigns.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Create a campaign",
                "parameters": [
                    {
                        "description": "Campaign data",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/campaigns.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/campaigns/generatecampaignurl": {
            "get": {
                "description": "Generate the campaign url",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Generate the campaign url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ptKhRKgMdzt",
                        "name": "campaign_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "campaign url",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad requesr",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "description": "Get the traffic/hit details of a specific campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Get the traffic/hit details of a specific campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "yyyy-MM-dd",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "yyyy-MM-dd",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of hits",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/campaigns.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flows": {
            "post": {
                "description": "Create a flow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flows"
                ],
                "summary": "Create a flow",
                "parameters": [
                    {
                        "description": "flow data",
                        "name": "flow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/flows.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flow created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flows/flowids": {
            "get": {
                "description": "Get the list of all flow ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flows"
                ],
                "summary": "Get the list of all flow ids",
                "responses": {
                    "200": {
                        "description": "List of flow ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/flows.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad requesr",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/landers": {
            "post": {
                "description": "Create a lander",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Landers"
                ],
                "summary": "Create a lander",
                "parameters": [
                    {
                        "description": "lander data",
                        "name": "lander",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/landers.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "lander created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/landers/landerids": {
            "get": {
                "description": "Get the list of all lander ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Landers"
                ],
                "summary": "Get the list of all lander ids",
                "responses": {
                    "200": {
                        "description": "List of lander ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/landers.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers": {
            "post": {
                "description": "Create an offer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offers"
                ],
                "summary": "Create an offer",
                "parameters": [
                    {
                        "description": "offer data",
                        "name": "offer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/offers.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/offers/offerids": {
            "get": {
                "description": "Get the list of all offer ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offers"
                ],
                "summary": "Get the list of all offer ids",
                "responses": {
                    "200": {
                        "description": "List of offer ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/offers.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trafficsources": {
            "post": {
                "description": "Create a trafficsource",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trafficsources"
                ],
                "summary": "Create a trafficsource",
                "parameters": [
                    {
                        "description": "trafficsource data",
                        "name": "trafficsource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trafficsources.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trafficsource created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trafficsources/trafficsourceids": {
            "get": {
                "description": "Get the list of all trafficsource ids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trafficsources"
                ],
                "summary": "Get the list of all trafficsource ids",
                "responses": {
                    "200": {
                        "description": "List of trafficsource ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/trafficsources.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad requesr",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trafficsourcetokens": {
            "post": {
                "description": "Create a trafficsource token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Trafficsourcetokens"
                ],
                "summary": "Create a trafficsource token",
                "parameters": [
                    {
                        "description": "trafficsource token data",
                        "name": "trafficsourcetoken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/trafficsourcetokens.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trafficsource token created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "affiliatenetworks.Request": {
            "type": "object",
            "required": [
                "AffiliateNetworkName"
            ],
            "properties": {
                "AffiliateNetworkName": {
                    "type": "string"
                }
            }
        },
        "affiliatenetworks.Response": {
            "type": "object",
            "required": [
                "AffiliateNetworkName",
                "Id"
            ],
            "properties": {
                "AffiliateNetworkName": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                }
            }
        },
        "campaigns.Request": {
            "type": "object",
            "required": [
                "CampaignCPC",
                "CampaignCountry",
                "CampaignFlow",
                "CampaignName",
                "CampaignTrackingDomain",
                "CampaignTrafficSource",
                "CampaignUUID"
            ],
            "properties": {
                "CampaignCPC": {
                    "type": "integer"
                },
                "CampaignCountry": {
                    "type": "string"
                },
                "CampaignFlow": {
                    "type": "integer"
                },
                "CampaignName": {
                    "type": "string"
                },
                "CampaignTrackingDomain": {
                    "type": "integer"
                },
                "CampaignTrafficSource": {
                    "type": "integer"
                },
                "CampaignUUID": {
                    "type": "string"
                }
            }
        },
        "campaigns.Response": {
            "type": "object",
            "required": [
                "CampaignCPC",
                "CampaignConversions",
                "CampaignCountry",
                "CampaignDaysLapsed",
                "CampaignEPC",
                "CampaignFlowID",
                "CampaignHoursLapsed",
                "CampaignImpressions",
                "CampaignName",
                "CampaignProfit",
                "CampaignROI",
                "CampaignRevenue",
                "CampaignTotalCost",
                "CampaignTrafficSource",
                "CampaignUUID",
                "CampaignUniqueImpressions"
            ],
            "properties": {
                "CampaignCPC": {
                    "type": "integer"
                },
                "CampaignConversions": {
                    "type": "integer"
                },
                "CampaignCountry": {
                    "type": "string"
                },
                "CampaignDaysLapsed": {
                    "type": "number"
                },
                "CampaignEPC": {
                    "type": "integer"
                },
                "CampaignFlowID": {
                    "type": "string"
                },
                "CampaignHoursLapsed": {
                    "type": "number"
                },
                "CampaignImpressions": {
                    "type": "integer"
                },
                "CampaignName": {
                    "type": "string"
                },
                "CampaignProfit": {
                    "type": "integer"
                },
                "CampaignROI": {
                    "type": "integer"
                },
                "CampaignRevenue": {
                    "type": "integer"
                },
                "CampaignTotalCost": {
                    "type": "integer"
                },
                "CampaignTrafficSource": {
                    "type": "string"
                },
                "CampaignUUID": {
                    "type": "string"
                },
                "CampaignUniqueImpressions": {
                    "type": "integer"
                }
            }
        },
        "flows.Request": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "key will always be string and value can be int, float etc",
                    "type": "object",
                    "additionalProperties": true
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flows.Request"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "flows.Response": {
            "type": "object",
            "required": [
                "FlowNodeId",
                "Id"
            ],
            "properties": {
                "FlowNodeId": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                }
            }
        },
        "landers.Request": {
            "type": "object",
            "required": [
                "LanderName",
                "LanderURL"
            ],
            "properties": {
                "LanderName": {
                    "type": "string"
                },
                "LanderURL": {
                    "type": "string"
                }
            }
        },
        "landers.Response": {
            "type": "object",
            "required": [
                "Id",
                "LanderName"
            ],
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "LanderName": {
                    "type": "string"
                }
            }
        },
        "offers.Request": {
            "type": "object",
            "required": [
                "OfferAffiliateNetwork",
                "OfferName",
                "OfferPayout",
                "OfferURL"
            ],
            "properties": {
                "OfferAffiliateNetwork": {
                    "type": "integer"
                },
                "OfferName": {
                    "type": "string"
                },
                "OfferPayout": {
                    "type": "integer"
                },
                "OfferURL": {
                    "type": "string"
                }
            }
        },
        "offers.Response": {
            "type": "object",
            "required": [
                "Id",
                "OfferName"
            ],
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "OfferName": {
                    "type": "string"
                }
            }
        },
        "trafficsources.Request": {
            "type": "object",
            "required": [
                "TrafficSourceName"
            ],
            "properties": {
                "TrafficSourceName": {
                    "type": "string"
                }
            }
        },
        "trafficsources.Response": {
            "type": "object",
            "required": [
                "Id",
                "TrafficSourceName"
            ],
            "properties": {
                "Id": {
                    "type": "integer"
                },
                "TrafficSourceName": {
                    "type": "string"
                }
            }
        },
        "trafficsourcetokens.Request": {
            "type": "object",
            "required": [
                "TrafficSourceName"
            ],
            "properties": {
                "Tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/trafficsourcetokens.Token"
                    }
                },
                "TrafficSourceName": {
                    "type": "integer"
                }
            }
        },
        "trafficsourcetokens.Token": {
            "type": "object",
            "required": [
                "TrafficSourceTokenName",
                "TrafficSourceTokenParam",
                "TrafficSourceTokenQuery"
            ],
            "properties": {
                "TrafficSourceTokenName": {
                    "type": "string"
                },
                "TrafficSourceTokenParam": {
                    "type": "string"
                },
                "TrafficSourceTokenQuery": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:4000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Affiliate tracker",
	Description:      "Api routes for Affiliate tracker",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
